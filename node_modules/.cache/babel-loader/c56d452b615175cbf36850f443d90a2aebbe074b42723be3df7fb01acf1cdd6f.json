{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/ReactPractices/my-chart-app/src/App.js\";\nimport { Component } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js/auto\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ApiStatus: false,\n      dataSets: [],\n      dataLabels: []\n    };\n    this.callApi = async () => {\n      const options = {\n        method: \"GET\"\n      };\n      const response = await fetch(\"https://datausa.io/api/data?drilldowns=Nation&measures=Population\", options);\n      const data = await response.json();\n      console.log(data);\n      const dataLabels = data.data.map(each => each.Year);\n      const dataSets = data.data.map(each => each.Population);\n      this.setState({\n        ApiStatus: true,\n        dataSets,\n        dataLabels\n      });\n    };\n    this.getLoader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animate-loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this);\n    this.getBarData = () => {\n      const {\n        dataSets,\n        dataLabels\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: dataLabels,\n            datasets: [{\n              label: dataSets,\n              data: dataSets,\n              backgroundColor: [\"rgba(75,192,192,1)\", \"red\", \"green\", \"yellow\"],\n              borderColor: \"black\",\n              borderWidth: 2\n            }]\n          },\n          options: {\n            plugins: {\n              title: {\n                display: true,\n                text: \"United States Population between 2013 to 2021\"\n              },\n              responsive: true,\n              scales: {\n                yAxes: [{\n                  stacked: true,\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  componentDidMount() {\n    this.callApi();\n  }\n  render() {\n    const {\n      ApiStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-chart-con\",\n      children: ApiStatus === false ? this.getLoader() : this.getBarData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","Chart","ChartJS","ArcElement","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","App","constructor","args","state","ApiStatus","dataSets","dataLabels","callApi","options","method","response","fetch","data","json","console","log","map","each","Year","Population","setState","getLoader","className","fileName","_jsxFileName","lineNumber","columnNumber","getBarData","children","labels","datasets","label","backgroundColor","borderColor","borderWidth","plugins","title","display","text","responsive","scales","yAxes","stacked","ticks","beginAtZero","componentDidMount","render"],"sources":["/home/workspace/reactjs/coding-practices/ReactPractices/my-chart-app/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js/auto\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"./App.css\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nclass App extends Component {\n  state = { ApiStatus: false, dataSets: [], dataLabels: [] };\n  componentDidMount() {\n    this.callApi();\n  }\n\n  callApi = async () => {\n    const options = {\n      method: \"GET\",\n    };\n    const response = await fetch(\n      \"https://datausa.io/api/data?drilldowns=Nation&measures=Population\",\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n    const dataLabels = data.data.map((each) => each.Year);\n    const dataSets = data.data.map((each) => each.Population);\n    this.setState({ ApiStatus: true, dataSets, dataLabels });\n  };\n\n  getLoader = () => <div className=\"animate-loader\"></div>;\n\n  getBarData = () => {\n    const { dataSets, dataLabels } = this.state;\n\n    return (\n      <div className=\"bar-chart\">\n        <Bar\n          data={{\n            labels: dataLabels,\n            datasets: [\n              {\n                label: dataSets,\n                data: dataSets,\n                backgroundColor: [\n                  \"rgba(75,192,192,1)\",\n                  \"red\",\n                  \"green\",\n                  \"yellow\",\n                ],\n                borderColor: \"black\",\n                borderWidth: 2,\n              },\n            ],\n          }}\n          options={{\n            plugins: {\n              title: {\n                display: true,\n                text: \"United States Population between 2013 to 2021\",\n              },\n              responsive: true,\n              scales: {\n                yAxes: [\n                  {\n                    stacked: true,\n                    ticks: {\n                      beginAtZero: true,\n                    },\n                  },\n                ],\n              },\n            },\n          }}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { ApiStatus } = this.state;\n\n    return (\n      <div className=\"bar-chart-con\">\n        {ApiStatus === false ? this.getLoader() : this.getBarData()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,eAAe;AAC7E,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnBN,OAAO,CAACO,QAAQ,CAACN,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMK,GAAG,SAASV,SAAS,CAAC;EAAAW,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MAAEC,SAAS,EAAE,KAAK;MAAEC,QAAQ,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAC;IAAA,KAK1DC,OAAO,GAAG,YAAY;MACpB,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE;MACV,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEAAmE,EACnEH,OACF,CAAC;MACD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,MAAMN,UAAU,GAAGM,IAAI,CAACA,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;MACrD,MAAMb,QAAQ,GAAGO,IAAI,CAACA,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,UAAU,CAAC;MACzD,IAAI,CAACC,QAAQ,CAAC;QAAEhB,SAAS,EAAE,IAAI;QAAEC,QAAQ;QAAEC;MAAW,CAAC,CAAC;IAC1D,CAAC;IAAA,KAEDe,SAAS,GAAG,mBAAMvB,OAAA;MAAKwB,SAAS,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IAAA,KAExDC,UAAU,GAAG,MAAM;MACjB,MAAM;QAAEtB,QAAQ;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACH,KAAK;MAE3C,oBACEL,OAAA;QAAKwB,SAAS,EAAC,WAAW;QAAAM,QAAA,eACxB9B,OAAA,CAACF,GAAG;UACFgB,IAAI,EAAE;YACJiB,MAAM,EAAEvB,UAAU;YAClBwB,QAAQ,EAAE,CACR;cACEC,KAAK,EAAE1B,QAAQ;cACfO,IAAI,EAAEP,QAAQ;cACd2B,eAAe,EAAE,CACf,oBAAoB,EACpB,KAAK,EACL,OAAO,EACP,QAAQ,CACT;cACDC,WAAW,EAAE,OAAO;cACpBC,WAAW,EAAE;YACf,CAAC;UAEL,CAAE;UACF1B,OAAO,EAAE;YACP2B,OAAO,EAAE;cACPC,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR,CAAC;cACDC,UAAU,EAAE,IAAI;cAChBC,MAAM,EAAE;gBACNC,KAAK,EAAE,CACL;kBACEC,OAAO,EAAE,IAAI;kBACbC,KAAK,EAAE;oBACLC,WAAW,EAAE;kBACf;gBACF,CAAC;cAEL;YACF;UACF;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEV,CAAC;EAAA;EAlEDmB,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACtC,OAAO,CAAC,CAAC;EAChB;EAkEAuC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAE1C;IAAU,CAAC,GAAG,IAAI,CAACD,KAAK;IAEhC,oBACEL,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAM,QAAA,EAC3BxB,SAAS,KAAK,KAAK,GAAG,IAAI,CAACiB,SAAS,CAAC,CAAC,GAAG,IAAI,CAACM,UAAU,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAEV;AACF;AAEA,eAAe1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}